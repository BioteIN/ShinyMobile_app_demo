  library(shiny)
  library(shinyMobile)
  library(shinyWidgets)
  library(bs4Dsh)
  library(tidyverse)
  library(shinycssloaders)
  library(highcharter)
  library(apexcharter)
  
  
  source(file = "global.R", local = TRUE)
  
  
  shinyApp(
    ui = f7Page(
      title = "Tab layout",
      f7TabLayout(
        tags$head(
          tags$script(
            "$(function(){
               $('#tapHold').on('taphold', function () {
                 app.dialog.alert('Tap hold fired!');
               });
             });
             "
          )
        ),
        panels = tagList(
          f7Panel(title = "Left Panel", side = "left", theme = "light", "Left One", effect = "cover"),
          f7Panel(title = "Right Panel", side = "right", theme = "dark", "Right One", effect = "cover")
        ),
        navbar = f7Navbar(
          title = "ShinyMobile App",
          hairline = FALSE,
          shadow = TRUE,
          leftPanel = TRUE,
          rightPanel = TRUE
        ),
        f7Tabs(
          
          animated = FALSE,
          swipeable = TRUE,
          f7Tab(
            tabName = "Tab 1",
            icon = f7Icon("today"),
            active = TRUE,
            f7Shadow(
              intensity = 10,
              hover = TRUE,
              f7Card(
                title = "Gr√°ficos de Vendas",
                dateRangeInput('dateRange',
                               label = 'Pesquisa por Data', start = Sys.Date() - 900, end = Sys.Date()
                )
                ,
                box(
                  title = "Vendas por Datas"
                  ,status = "primary"
                  ,solidHeader = TRUE 
                  ,collapsible = TRUE 
                  ,plotOutput("revenuebyPrd", height = "300px")
                ),
                box(
                  title = "Vendas pelo tipo de recargas"
                  ,status = "primary"
                  ,solidHeader = TRUE 
                  ,collapsible = TRUE 
                  ,plotOutput("revenuebyRegion", height = "300px")
                )
                ,
                footer = tagList(
                
                )
              )
            )
          ),
          f7Tab(
            tabName = "Tab 2",
            icon = f7Icon("today"),
            active = FALSE,
            f7Shadow(
              intensity = 10,
              hover = TRUE,
              f7Card(
                title = "Graphics - Apexchart & Highchart",
                dateRangeInput('dateRange',
                               label = 'Pesquisa por Data',
                               start = Sys.Date() - 900, end = Sys.Date()
                ),
                column(
                  width = 12, offset = 0,
                  tags$h2("Apexchart - Vendas por Recarga"),
                  apexchartOutput("chart")
                ),
                column(12,
                       
                       box(
                         tags$h2("Highchart - Vendas por Data"),
                         highchartOutput("hcontainer"),
                         
                         
                         
                         width="12") #end box2
                       
                )
                ,
                footer = tagList(
                  
                )
              )
            )
          ),
          f7Tab(
            tabName = "Tab 3",
            icon = f7Icon("today"),
            active = FALSE,
            f7Shadow(
              intensity = 10,
              hover = TRUE,
              f7Card(
                title = "Recarregamento",
                
                  tagList(
                    bs4ValueBoxOutput("vbox"),
                    bs4ValueBoxOutput("vbox_2"),
                    bs4ValueBoxOutput("vbox_1")
                  )
                ,
                footer = tagList(
                 
                )
              )
            )
          )
        )
      )
    ),
    server = function(input, output) {
      output$distPlot1 <- renderPlot({
        dist <- rnorm(input$obs1)
        hist(dist)
      })
      
      output$distPlot2 <- renderPlot({
        dist <- switch(
          input$obs2,
          norm = rnorm,
          unif = runif,
          lnorm = rlnorm,
          exp = rexp,
          rnorm
        )
        
        hist(dist(500))
      })
      
      output$data <- renderTable({
        mtcars[, c("mpg", input$variable), drop = FALSE]
      }, rownames = TRUE)
    
      
      source(file = "server/01_srv_recarregamento.R", local = TRUE)
      v2 <- topup_dat %>% group_by(CREATED_AT) %>% summarise(value = sum(QYT)) %>% filter(value==max(value))
      b <-  reactive({ topup_filter_tbl() %>% group_by(CREATED_AT) %>% summarise(value = sum(QYT))%>% filter(value==max(value))})
      v3 <- sum(topup_dat$AMOUNT)
      v4 <- topup_dat %>% group_by(format(CREATED_AT, "%m")) %>% summarise(value = sum(AMOUNT)) %>% filter(value==max(value))
      output$vbox <- renderbs4ValueBox({
        bs4ValueBox(
          value = prettyNum(v2$value, big.mark = ","),
          subtitle = "Quantidade de Recargas Vendidas",
          status = "primary",
          icon = "shopping-cart",
          href = "#"
        )
      })
      
      output$vbox_2 <- renderbs4ValueBox({
        bs4ValueBox(
          value = prettyNum(topup_yearly_tbl$total_amount, big.mark = ","),
          subtitle = "Valor Total de Recargas Vendidas",
          status = "primary",
          icon = "comments",
          href = "#"
        )
      })
      
      output$vbox_1 <- renderbs4ValueBox({
        bs4ValueBox(
          value = prettyNum(v4$value, big.mark = ","),
          subtitle = "Valor de recargas Mensais",
          status = "primary",
          icon = "comments",
          href = "#"
        )
      })
     
      
      #Criar reatives
      
      topup_filter_tbl <- reactive({
        
        result <- topup_dat %>% filter(between(CREATED_AT, input$dateRange[1], input$dateRange[2]))
        
        return(result)
        
      })
      
      # 3.0 manipulacao de dados ------------------------------------------------
      
      total.revenue <- reactive({
        
        sum(topup_filter_tbl()$AMOUNT)
        
      })
      
      
      sales.account <-  reactive({ topup_filter_tbl() %>% group_by(CREATED_AT) %>% summarise(value = sum(QYT)) %>% filter(value==max(value))})
      
      prof.prod <- reactive({topup_filter_tbl() %>% group_by(format(CREATED_AT, "%m")) %>% summarise(value = sum(AMOUNT)) %>% filter(value==max(value))})
      
      day.rec <- reactive({topup_filter_tbl() %>% group_by(format(CREATED_AT, "%m")) %>% summarise(value = sum(AMOUNT)) %>% filter(value==max(value))})
      output$revenuebyPrd <- renderPlot({
        ggplot(data = topup_filter_tbl(), 
               aes(x=CREATED_AT, y=AMOUNT, fill=factor(SEGMENTATION_ID))) + 
          geom_bar(position = "dodge", stat = "identity") + ylab("Valor (em Meticais)") + 
          xlab("Data") + theme(legend.position="bottom" 
                               ,plot.title= element_text(size=15, face="bold")) + 
          ggtitle("Valor das Vendas por data") + labs(fill = "Tipo")
      })
      
      
      output$revenuebyRegion <- renderPlot({
        ggplot(data = topup_filter_tbl(), 
               aes(x=SEGMENTATION_ID, y=AMOUNT, fill=factor(SEGMENTATION_ID))) + 
          geom_bar(position = "dodge", stat = "identity") + ylab("Valor (em Meticais)") + 
          xlab("Tipo de Recarga") + theme(legend.position="bottom" 
                                          ,plot.title= element_text(size=15, face="bold")) + 
          ggtitle("Valor das Vendas por tipo") + labs(fill = "Tipo")
      })
      
      output$chart <- renderApexchart({
        #input$redraw
        #apexchart() %>%
        #  ax_chart(type = "bar") %>%
        #ax_series(
        #list(
        #name = "Example",
        #data = sample(1:100, 5)
        #)
        #) %>%
        #ax_xaxis(
        #    categories = LETTERS[1:5]
        # )
        
        data("economics", package = "ggplot2")
        apex(data = topup_filter_tbl(), type = "line", mapping = aes(x = SEGMENTATION_ID, y = AMOUNT)) %>% 
          ax_stroke(width = 1)
      })
      
      
      
      output$hcontainer <- renderHighchart ({
        
        data(mpg, package = "ggplot2")
        mpgman2 <- topup_filter_tbl() %>%
          group_by(CREATED_AT) %>%
          summarise(
            n = AMOUNT
          )
        mpgman2
        hchart(
          mpgman2, "column", hcaes(x = CREATED_AT, y = n, group = CREATED_AT),
          colorKey = "displ"
          # color = c("#FCA50A", "#FCFFA4"),
          #name = c("Year 1999", "Year 2008")
        ) %>%
          hc_colorAxis(min = 0, max = 5)
        
      })
      
      
    }
  )


